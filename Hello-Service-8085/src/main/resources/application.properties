# 應用名稱
spring.application.name=Hello-Service-8085

# 應用端口
server.port=8085

# 使用 IP 地址註冊
eureka.instance.prefer-ip-address=true

# 註冊中心 ip 地址
eureka.instance.ip-address=10.100.53.58
#eureka.instance.ip-address=127.0.0.1

# 註冊中心位置
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.ip-address}:8761/eureka/

# 變更顯示在註冊中心的 id 名稱
eureka.instance.instance-id=${spring.application.name}:${server.port}

# 心跳間隔，單位為秒
# 這些設置確保了 Hello-Service-8085 每 30 秒向 Eureka 服務器發送一次心跳，
eureka.instance.lease-renewal-interval-in-seconds=30

# 如果 90 秒內 Eureka 服務器沒有收到心跳，則該服務實例將被視為下線。
# 實例過期時間，單位為秒
eureka.instance.lease-expiration-duration-in-seconds=90

# 設定 actuator 的端點路徑
management.endpoints.web.base-path=/actuator

# 設定要公開的 actuator 端點
# 端點是一個 RESTful API，用於管理和監控應用程序。它們是由Spring Boot Actuator模塊提供的。
# health, info, env, beans, configprops, loggers, metrics, trace, threaddump, heapdump
# health: 用於檢查應用程序的健康狀態,      例如: /actuator/health
# info: 用於檢索應用程序的信息,           例如: /actuator/info
# env: 用於檢索應用程序的環境變量,         例如: /actuator/env
# beans: 用於檢索應用程序的所有bean,      例如: /actuator/beans
# configprops: 用於檢索應用程序的所有配置, 例如: /actuator/configprops
# loggers: 用於檢索應用程序的日誌配置,     例如: /actuator/loggers
# metrics: 用於檢索應用程序的指標,        例如: /actuator/metrics
# trace: 用於檢索應用程序的請求跟踪,       例如: /actuator/trace
# threaddump: 用於檢索應用程序的線程信息,  例如: /actuator/threaddump
# heapdump: 用於檢索應用程序的堆信息,      例如: /actuator/heapdump
management.endpoints.web.exposure.include=*

# 顯示健康狀態的詳細信息
management.endpoint.health.show-details=always

spring.boot.admin.client.url=http://localhost:9999
